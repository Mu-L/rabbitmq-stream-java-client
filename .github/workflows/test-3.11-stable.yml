name: Test against RabbitMQ 3.11 stable

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  RABBITMQ_IMAGE_TAG: 3.11
  RABBITMQ_IMAGE: rabbitmq
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
      - name: Checkout tls-gen
        uses: actions/checkout@v3
        with:
          repository: rabbitmq/tls-gen
          path: './tls-gen'
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
#      - name: Start broker
#        run: ci/start-broker.sh
#      - name: Test
#        run: |
#          ./mvnw verify -Drabbitmqctl.bin=DOCKER:rabbitmq \
#            -Dca.certificate=./tls-gen/basic/result/ca_certificate.pem \
#            -Dclient.certificate=./tls-gen/basic/result/client_$(hostname)_certificate.pem \
#            -Dclient.key=./tls-gen/basic/result/client_$(hostname)_key.pem
#      - name: Stop broker
#        run: docker stop rabbitmq && docker rm rabbitmq
#      - name: Upload Codecov report
#        run: bash <(curl -s https://codecov.io/bash)
#      - name: Publish snapshot
#        run: ./mvnw clean deploy -Psnapshots -DskipITs -DskipTests
#        env:
#          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
#          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
      - name: Package Stream Perf Test
        run: ci/package-stream-perf-test.sh
        env:
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
      - name: Delete old releases
        uses: rabbitmq/delete-release-action@main
        with:
          repository: rabbitmq/rabbitmq-java-tools-binaries-dev
          tag-filter: '^v-stream-perf-test-0.[0-9]+.0-SNAPSHOT-[0-9]{8}-[0-9]{6}$'
          keep-last-n: 2
        env:
          DELETE_RELEASE_ACTION_TOKEN: ${{ secrets.DUMMY_TOKEN }}
      - name: Push to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: packages/*
          name: ${{ env.release_name }}
          tag_name: ${{ env.tag_name }}
          target_commitish: main
          token: ${{ secrets.CI_GITHUB_TOKEN }}
          repository: rabbitmq/rabbitmq-java-tools-binaries-dev
      - name: Delete latest release
        uses: rabbitmq/delete-release-action@main
        with:
          repository: rabbitmq/rabbitmq-java-tools-binaries-dev
          tag-filter: '^v-stream-perf-test-latest$'
          keep-last-n: 0
        env:
          DELETE_RELEASE_ACTION_TOKEN: ${{ secrets.DUMMY_TOKEN }}
      - name: Push to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: packages-latest/*
          name: stream-perf-test-latest
          tag_name: v-stream-perf-test-latest
          target_commitish: main
          token: ${{ secrets.CI_GITHUB_TOKEN }}
          repository: rabbitmq/rabbitmq-java-tools-binaries-dev